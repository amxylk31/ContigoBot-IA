---
import { app } from '../firebase/server'
import { getAuth } from 'firebase-admin/auth'
import Layout from '../layouts/Layout.astro'
import Header from '../components/Header.astro'
import '@fontsource-variable/outfit';
/* Verificar si el usuario está autenticado */
const auth = getAuth(app)
if (Astro.cookies.has('session')) {
  const sessionCookie = Astro.cookies.get('session').value
  const decodedCookie = await auth.verifySessionCookie(sessionCookie)
  if (decodedCookie) {
    return Astro.redirect('/dashboard')
  }
}
---
<link
  rel="stylesheet"
  type="text/css"
  href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
/>

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<Layout title="Iniciar sesión">
  <div class="body">
  <Header/>
    <div class="cont-form">
      <p class="signin-text">
        ¿Eres nuevo aquí? <a href="/register">Crear una cuenta</a>
      </p>
      <form action="/api/auth/signin" method="post">
        <label for="email" for="email">Email</label>
        <input type="email" name="email" id="email" />
        <label for="password">Contraseña</label>
        <input type="password" name="password" id="password" />
        <button type="submit">Iniciar sesión</button>
      </form>
      <div class="contenedor-img">
        <img src="chatbot2.jpeg" alt="chatbot_inicio" />
      </div>
    </div>
  </div>
</Layout>

<script>
  import { getAuth, inMemoryPersistence, signInWithEmailAndPassword } from 'firebase/auth'
  import { app } from '../firebase/client'
  import { showMessage } from '../resources/notification'
  const auth = getAuth(app)
  // Esto evitará que el navegador almacene los datos de sesión
  auth.setPersistence(inMemoryPersistence)

  const form = document.querySelector('form') as HTMLFormElement
  form.addEventListener('submit', async (e) => {
    e.preventDefault()
    const formData = new FormData(form)
    const email = formData.get('email')?.toString()
    const password = formData.get('password')?.toString()

    if (!email || !password) {
      return
    }
    try {
      const userCredential = await signInWithEmailAndPassword(auth, email, password)
      const idToken = await userCredential.user.getIdToken()
      const response = await fetch('/api/auth/signin', {
        method: 'GET',
        headers: {
          Authorization: `Bearer ${idToken}`
        }
      })

      if (response.redirected) {
        showMessage('Iniciando sesión por favor espere...')
        setTimeout(() => {
          window.location.assign(response.url)
        }, 2000)
      }
    } catch {
      showMessage('Error al iniciar sesión por favor verifique correo y contraseña ', 'ERROR')
    }
  })
</script>

<style>
  .cont-form {
    background-color: var(--background-color);
    transition: background-color 0.8s ease;
    margin-top: 20vh;
  }
  .contenedor-img {
    display: flex;
    justify-content: left;
    width: 10px;
    height: 500px;
    margin-top: -200px; /* Ajusta la distancia vertical */
    transition: background-color 0.8s ease;
  }
  form {
    max-width: 400px;
    margin: 0 auto;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 5px;
    background-color: #fcdef4;
    font-family: 'Outfit Variable', sans-serif;
  }

  label {
    display: block;
    margin-bottom: 10px;
    font-weight: bold;
    color: var(--background-color-chat-dark);
    font-family: 'Outfit Variable', sans-serif;
  }

  input {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    border: 1px solid #ccc;
    border-radius: 3px;
    color: var(--background-color-chat-dark);
  }

  button {
    background-color: #fcb97a;
    color: #000000;
    border: none;
    border-radius: 3px;
    padding: 10px 20px;
    cursor: pointer;
    font-family: 'Outfit Variable', sans-serif;
  }

  button:hover {
    background-color: #d67403;
  }

  .signin-text {
    padding-top: 110px;
    text-align: center;
    font-size: 18px;
    font-weight: bold;
    font-family: 'Outfit Variable', sans-serif;
  }
  .signin-text a{
    font-size: 18px;
    font-weight: bold;
    font-family: 'Outfit Variable', sans-serif;
    color: #bc62f8;
  }
</style>
