---
import Layout from '../layouts/Layout.astro'
import Header from '../components/Header.astro'
import '@fontsource-variable/outfit';
---

<Layout title="Registro">
  <link
    rel="stylesheet"
    type="text/css"
    href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
  />
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  
  <Header class="header" />
  <div class="body">
    <p class="registration-text">
      ¿Ya tienes una cuenta? <a href="/signin">Iniciar sesión</a>
    </p>
    <form id="register-form" action="/api/auth/register" method="post" enctype="multipart/form-data">
      <label for="name">Nombre</label>
      <input type="text" name="name" id="name" placeholder="Ingresa tu nombre" />
      <label for="email">Correo electrónico</label>
      <input type="email" name="email" id="email" placeholder="Ingresa tu correo electrónico" />
      <label for="password">Contraseña</label>
      <input type="password" name="password" id="password" placeholder="Ingresa tu contraseña" />
      <button type="submit" id="buttonSub">Registrarse</button>
    </form>
  </div>
</Layout>
<script>
  
  import { showMessage } from '../resources/notification'
  
  document.getElementById('register-form').addEventListener('submit', async (event) => {
    event.preventDefault()

    const form = event.target as HTMLFormElement
    const formData = new FormData(form)
    const response = await fetch('/api/auth/register', { method: 'POST', body: formData })
    const data = await response.json()

    showMessage(data.message, data.status === 200 ? 'success' : 'error')

    if (data.status === 200) {
      setTimeout(() => {
        window.location.href = '/signin'
      }, 2000)
    }
  })
</script>

<style>
  .cont-form {
    background-color: var(--background-color);
    transition: background-color 0.8s ease;
    margin-top: 20vh;
    font-family: 'Outfit Variable', sans-serif;
  }
  form {
    display: flex;
    flex-direction: column;
    max-width: 100vh;
    margin: 0 auto;
    height: 50vh;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 5px;
    background-color: #fcdef4;
    font-family: 'Outfit Variable', sans-serif;
    gap: 10px;
  }
  label {
    display: block;
    margin-bottom: 10px;
    font-weight: bold;
    font-family: 'Outfit Variable', sans-serif;
  }

  input {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    border: 1px solid #ccc;
    border-radius: 3px;
  }

  button {
    position: absolute;
    bottom: 30vh;
    left: 50%;
    transform: translateX(-50%);
    background-color: #fcb97a;
    color: #000000;
    border: none;
    border-radius: 3px;
    cursor: pointer;
    padding: 10px 15px;
  }

  .check-cont {
    display: flex;
  }

  input[type='checkbox'] {
    width: 10vh;
    margin-right: 1px;
  }
  button:hover {
    background-color: #d67403;
  }

  .registration-text {
    text-align: center;
    font-size: 18px;
    font-weight: bold;
    font-family: 'Outfit Variable', sans-serif;
    padding-top: 5%;
  }
  .registration-text a {
    font-size: 18px;
    font-weight: bold;
    font-family: 'Outfit Variable', sans-serif;
    color: #bc62f8
  }  

  <style > .contenedor {
    display: flex;
    justify-content: end;
  }

  #password {
    font-size: 16px;
  }
  body {
    background: url('/fondo.jpeg') no-repeat center center fixed;
    background-size: cover;
    min-height: 90vh;
  }
</style>
